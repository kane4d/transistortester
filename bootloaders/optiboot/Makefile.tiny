#
# Makefile for tiny AVR chips
#
# * Copyright 2013-2015 by Bill Westfield.  Part of Optiboot.
# * reorganized and extended 2017 by K.-H. Kuebbeler
# * This software is licensed under version 2 of the Gnu Public Licence.
# * See optiboot.c for details.
#
# ATtiny84
################################################
# generic attiny84
# let board specific change the frequency and fuses
attiny84: TARGET := attiny84
attiny84: override MCU_TARGET := attiny84
attiny84: override FLASH_SIZE := 8192
attiny84: override FLASH_PAGE_SIZE := 64
# use the flash page size of tiny84 to prevent unaligned Start-Address
attiny84: override BOOT_PAGE_LEN := 64
attiny84: override VIRTUAL_BOOT_PARTITION = 1
ifndef AVR_FREQ
attiny84: AVR_FREQ := 8000000
endif
ifndef HFUSE
## Brownout disabled
#attiny84: HFUSE := DF
# Brownout 2.7V
attiny84:  HFUSE := DD
endif
ifndef LFUSE
# 8MHz internal oscillator, slowly rising power
#attiny84: LFUSE := E2
## 8MHz internal oscillator, slowly rising power, Clock out
#attiny84: LFUSE := A2
# 8MHz crystal, slowly rising power
attiny84: LFUSE := FF
endif
ifndef EFUSE
# Self-programming enable
attiny84: EFUSE := FE
endif
attiny84: SOFT_UART := 1
attiny84: save_vect_num := 4
export
attiny84:
	$(SUB_MAKE) hex_file

#
# ATtiny85
################################################
# generic attiny85
# let board specific change the frequency and fuses
attiny85: TARGET := attiny85
attiny85: override MCU_TARGET := attiny85
attiny85: override FLASH_SIZE := 8192
attiny85: override FLASH_PAGE_SIZE := 64
# use the flash page size of tiny84 to prevent unaligned Start-Address
attiny85: override BOOT_PAGE_LEN := 64
attiny85: override VIRTUAL_BOOT_PARTITION := 1
ifndef AVR_FREQ
attiny85: AVR_FREQ := 8000000
endif
#attiny85: COMMON_OPTIONS += -DVIRTUAL_BOOT_PARTITION -Dsave_vect_num=4
# The loader option --gc-sections remove the .text part!
#attiny85: LDSECTIONS = -Wl,--gc-sections -Wl,--undefined=optiboot_version

ifndef HFUSE
# Brownout 2.7V
attiny85: HFUSE := DD
endif
ifndef LFUSE
# 8MHz internal, 6CK/14CK + 64ms
attiny85: LFUSE := E2
endif
ifndef EFUSE
# Self-programming enable
attiny85: EFUSE := FE
endif
attiny85: SOFT_UART := 1
attiny85: BAUD_RATE := 38400
attiny85: save_vect_num := 4
#export TARGET MCU_TARGET AVR_FREQ FLASH_SIZE FLASH_PAGE_SIZE BOOT_PAGE_LEN VIRTUAL_BOOT_PARTITION save_vect_num SOFT_UART HFUSE LFUSE EFUSE
export
attiny85: 
	$(SUB_MAKE) hex_file

#
# ATtiny88
################################################
# generic attiny88
# let board specific change the frequency and fuses
attiny88: TARGET := attiny88
attiny88: override MCU_TARGET := attiny88
attiny88: override FLASH_SIZE := 8192
attiny88: override FLASH_PAGE_SIZE := 64
# use the flash page size of tiny84 to prevent unaligned Start-Address
attiny88: override BOOT_PAGE_LEN := 64
attiny88: override VIRTUAL_BOOT_PARTITION := 1
ifndef AVR_FREQ
attiny88: AVR_FREQ := 8000000
endif
ifndef HFUSE
# Brownout 2.7V
attiny88: HFUSE := DD
endif
ifndef LFUSE
# 8MHz internal, 6CK/14CK + 64ms
attiny88: LFUSE := EE
endif
ifndef EFUSE
# Self-programming enable
attiny88: EFUSE := FE
endif
attiny88: SOFT_UART := 1
attiny88: save_vect_num := 4
export
attiny88:
	$(SUB_MAKE) hex_file

#
# ATtiny861
################################################
# generic attiny861
# let board specific change the frequency and fuses
attiny861: TARGET := attiny861
attiny861: override MCU_TARGET := attiny861
attiny861: override FLASH_SIZE := 8192
attiny861: override FLASH_PAGE_SIZE := 64
attiny861: override BOOT_PAGE_LEN := 64
attiny861: override VIRTUAL_BOOT_PARTITION := 1
ifndef AVR_FREQ
attiny861: AVR_FREQ := 8000000
endif
ifndef HFUSE
# Brownout 2.7V
attiny861: HFUSE := DD
endif
ifndef LFUSE
# 8MHz internal, 6CK/14CK + 64ms
attiny861: LFUSE := E2
endif
ifndef EFUSE
# Self-programming enable
attiny861: EFUSE := FE
endif
attiny861: SOFT_UART := 1
attiny861: save_vect_num := 4
export
attiny861:
	$(SUB_MAKE) hex_file

#
# ATtiny1634
################################################
# generic attiny1634
# let board specific change the frequency and fuses
attiny1634: TARGET := attiny1634
attiny1634: override MCU_TARGET := attiny1634
attiny1634: override FLASH_SIZE := 16384
attiny1634: override FLASH_PAGE_SIZE := 32
# use the flash page size of tiny84 to prevent unaligned Start-Address
attiny1634: override BOOT_PAGE_LEN := 32
attiny1634: override VIRTUAL_BOOT_PARTITION := 1
ifndef AVR_FREQ
attiny1634: AVR_FREQ := 8000000
endif
ifndef HFUSE
# Brownout 2.7V
attiny1634: HFUSE := DD
endif
ifndef LFUSE
# 8MHz internal, 6CK + 16ms, no DIV8
attiny1634: LFUSE := E2
endif
ifndef EFUSE
# Self-programming enable
attiny1634: EFUSE := FE
endif
attiny1634: BAUD_RATE := 57600
attiny1634: save_vect_num := 4
export
attiny1634:
	$(SUB_MAKE) hex_file


# 1MHz clocked platforms/boards
#
# These are capable of 9600 baud
#

luminet: TARGET := luminet
luminet: AVR_FREQ := 1000000
# 1MHz internal oscillator, slowly rising power, requires AVR_FREQ set to 1000000
luminet: LFUSE := 62
luminet: BAUD_RATE := 9600
luminet: LED_START_FLASHES := 0
export
luminet:
	$(MAKE) attiny84

